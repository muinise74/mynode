{"ast":null,"code":"function requireUtil() {\n  try {\n    // eslint-disable-next-line no-restricted-modules\n    return require(\"util\");\n  } catch (e) {\n    return null;\n  }\n} // for v10.12.0+\n\n\nfunction lookupCustomInspectSymbol() {\n  return Symbol.for(\"nodejs.util.inspect.custom\");\n} // for older node environments\n\n\nfunction tryReadingCustomSymbolFromUtilInspect(options) {\n  const _requireUtil = options.requireUtil || requireUtil;\n\n  const util = _requireUtil();\n\n  return util ? util.inspect.custom : null;\n}\n\nexports.getUtilInspect = function getUtilInspect(fallback) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  const _requireUtil = options.requireUtil || requireUtil;\n\n  const util = _requireUtil();\n\n  return function inspect(value, showHidden, depth) {\n    return util ? util.inspect(value, showHidden, depth) : fallback(value);\n  };\n};\n\nexports.getCustomInspectSymbol = function getCustomInspectSymbol() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const _lookupCustomInspectSymbol = options.lookupCustomInspectSymbol || lookupCustomInspectSymbol; // get custom inspect symbol for node environments\n\n\n  return _lookupCustomInspectSymbol() || tryReadingCustomSymbolFromUtilInspect(options);\n};","map":{"version":3,"names":["requireUtil","require","e","lookupCustomInspectSymbol","Symbol","for","tryReadingCustomSymbolFromUtilInspect","options","_requireUtil","util","inspect","custom","exports","getUtilInspect","fallback","value","showHidden","depth","getCustomInspectSymbol","_lookupCustomInspectSymbol"],"sources":["C:/Users/aischool/mynode/client/node_modules/tough-cookie/lib/utilHelper.js"],"sourcesContent":["function requireUtil() {\n  try {\n    // eslint-disable-next-line no-restricted-modules\n    return require(\"util\");\n  } catch (e) {\n    return null;\n  }\n}\n\n// for v10.12.0+\nfunction lookupCustomInspectSymbol() {\n  return Symbol.for(\"nodejs.util.inspect.custom\");\n}\n\n// for older node environments\nfunction tryReadingCustomSymbolFromUtilInspect(options) {\n  const _requireUtil = options.requireUtil || requireUtil;\n  const util = _requireUtil();\n  return util ? util.inspect.custom : null;\n}\n\nexports.getUtilInspect = function getUtilInspect(fallback, options = {}) {\n  const _requireUtil = options.requireUtil || requireUtil;\n  const util = _requireUtil();\n  return function inspect(value, showHidden, depth) {\n    return util ? util.inspect(value, showHidden, depth) : fallback(value);\n  };\n};\n\nexports.getCustomInspectSymbol = function getCustomInspectSymbol(options = {}) {\n  const _lookupCustomInspectSymbol =\n    options.lookupCustomInspectSymbol || lookupCustomInspectSymbol;\n\n  // get custom inspect symbol for node environments\n  return (\n    _lookupCustomInspectSymbol() ||\n    tryReadingCustomSymbolFromUtilInspect(options)\n  );\n};\n"],"mappings":"AAAA,SAASA,WAAT,GAAuB;EACrB,IAAI;IACF;IACA,OAAOC,OAAO,CAAC,MAAD,CAAd;EACD,CAHD,CAGE,OAAOC,CAAP,EAAU;IACV,OAAO,IAAP;EACD;AACF,C,CAED;;;AACA,SAASC,yBAAT,GAAqC;EACnC,OAAOC,MAAM,CAACC,GAAP,CAAW,4BAAX,CAAP;AACD,C,CAED;;;AACA,SAASC,qCAAT,CAA+CC,OAA/C,EAAwD;EACtD,MAAMC,YAAY,GAAGD,OAAO,CAACP,WAAR,IAAuBA,WAA5C;;EACA,MAAMS,IAAI,GAAGD,YAAY,EAAzB;;EACA,OAAOC,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAaC,MAAhB,GAAyB,IAApC;AACD;;AAEDC,OAAO,CAACC,cAAR,GAAyB,SAASA,cAAT,CAAwBC,QAAxB,EAAgD;EAAA,IAAdP,OAAc,uEAAJ,EAAI;;EACvE,MAAMC,YAAY,GAAGD,OAAO,CAACP,WAAR,IAAuBA,WAA5C;;EACA,MAAMS,IAAI,GAAGD,YAAY,EAAzB;;EACA,OAAO,SAASE,OAAT,CAAiBK,KAAjB,EAAwBC,UAAxB,EAAoCC,KAApC,EAA2C;IAChD,OAAOR,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAaK,KAAb,EAAoBC,UAApB,EAAgCC,KAAhC,CAAH,GAA4CH,QAAQ,CAACC,KAAD,CAA/D;EACD,CAFD;AAGD,CAND;;AAQAH,OAAO,CAACM,sBAAR,GAAiC,SAASA,sBAAT,GAA8C;EAAA,IAAdX,OAAc,uEAAJ,EAAI;;EAC7E,MAAMY,0BAA0B,GAC9BZ,OAAO,CAACJ,yBAAR,IAAqCA,yBADvC,CAD6E,CAI7E;;;EACA,OACEgB,0BAA0B,MAC1Bb,qCAAqC,CAACC,OAAD,CAFvC;AAID,CATD"},"metadata":{},"sourceType":"script"}